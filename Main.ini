namespace = addon\TexFX
; Allows for universal Discard by transparency
; Anime Game Modding Group discord server (https://discord.gg/agmg)
; Blame sinsofseven for this attrocity

; Not ready for use in production.

; run = CommandList\global\TransparencyDiscard\ActivateDiscard

; Example:
; [TextureOverrideLaylaHead]
; hash = b617aa07
; match_first_index = 0
; ib = ResourceLaylaHeadIB
; ps-t0 = ResourceLaylaHeadDiffuse
; ps-t1 = ResourceLaylaHeadLightMap
; ps-t69 = ResourceTransparencyMap
; run = CommandList\global\TransparencyDiscard\ActivateDiscard.0
;
;	\ActivateDiscard.0
;	\ActivateDiscard.1

; Variables & Resources ------------------------------
[Constants]
global $active = 0
global $switch = 0
z69 = 1
x = rt_width
y = rt_height

[ResourceRefDiffuse]
[ResourceRefLightmap]
[ResourceRefMask]
[ResourceRefo1]

; Present --------------------------------------------
[Present]
run = CommandListResetResources
$active = 0

; Commandlists ---------------------------------------
[CommandListActivateDiscard.0]
$switch = 1
$active = 1

[CommandListActivateDiscard.1]
$switch = 2
$active = 1

[CommandListResetResources]
;clear = ResourceRefDiffuse
;clear = ResourceRefLightmap
;clear = ResourceRefMask
;clear = ResourceRefo1
ResourceRefDiffuse = null
ResourceRefLightmap = null
ResourceRefMask = null
ResourceRefo1 = null

; Overrides -----------------------------------------

; Shaders --------------------------------------------

[CustomShaderTransparencyPlus]
drawindexed = auto
;draw = from_caller
cull = none
;cull = front

if $switch == 1
	ResourceRefDiffuse = reference ps-t0
	ResourceRefLightmap = reference ps-t1
	ResourceRefMask = reference ps-t69
elif $switch == 2
	ResourceRefDiffuse = reference ps-t1
	ResourceRefLightmap = reference ps-t2
	ResourceRefMask = reference ps-t69
endif

ps-t1 = ResourceRefLightmap
ps-t0 = ResourceRefDiffuse
ps-t26 = ResourceRefo1
ps-t69 = ResourceRefMask

post run =  CommandListResetResources
ps = .\Shaders\transparency.old.hlsl
blend_state_merge=true
;blend[0] = add src_color dest_color
blend[1] = min src_color zero
alpha[1] = min src_alpha blend_factor
blend_factor[0] = 0.5
blend_factor[1] = 0.5
blend_factor[2] = 0.5
blend_factor[3] = 1

; Shaders Regex --------------------------------------
;**** Regex Notes
;
;   [CommandList]
;   x = rt_width
;	y = rt_height
;   z70 = 420
;
;   [ShaderRegex]
;   shader_model = ps_5_0
;   temps = RESOLUTION INIPARAMS_70
;
;   [ShaderRegex.Declarations]
;   dcl_resource_texture1d (float,float,float,float) t120
;
;   [ShaderRegex.Match]
;   (?s)(?P<GROUPNAME>.*?matchme)
;
;   [ShaderRegex.Replace]
;   ${GROUPNAME}\n
;   ld_indexable(texture1d)(float,float,float,float) ${RESOLUTION}.xyzw, l(0,0,0,0), t120.xyzw\n
;   ld_indexable(texture1d)(float,float,float,float) ${INIPARAMS_70}.xyzw, l(70,70,70,70), t120.xyzw\n
;   //comments can be added like this.\n
;   add r99.xy, ${RESOLUTION}.xy, l(1920,1080)\n
;   discard_z r99.xy\n
;   //discard if RT HeightxWidth is 1920x1080\n
;
;
[ShaderRegexDiffuseTransparencyDiscard]
if $active == 1
	shader_model = ps_5_0
	$active = 0
endif


[ShaderRegexDiffuseVertexShader]
if $active == 2
	shader_model = vs_5_0
	drawindexed = auto
	ps-t69 = null
	$active = 0
endif

[ShaderRegexOutlineTransparency]
if $active == 1
	if ps-t69 == null
		shader_model = ps_5_0
		pre ResourceRefo1 = o1
		run = CustomShaderTransparencyPlus
		x = rt_width
		y = rt_height
	endif
	$active = 0
endif
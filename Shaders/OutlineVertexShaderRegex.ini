; namespace = addon\TexFx

; [ShaderRegexDiffuseVertexShader]
; if $active == 2
; 	drawindexed = auto
; 	shader_model = vs_5_0
; 	temps = ini
; 	y69 = 0
; 	ps-t69 = null
; 	$active = 0
; 	y69 = $active
; endif

; [ShaderRegexDiffuseVertexShader.InsertDeclarations]
; dcl_resource_texture1d (float,float,float,float) t120
; dcl_resource_texture2d (float,float,float,float) t69
; dcl_sampler s12, mode_default

; [ShaderRegexDiffuseVertexShader.Pattern]
; (?P<MatchDiffuse>
; dcl_output o1\.xyzw\n
; dcl_output o2\.xyzw\n
; dcl_output o3\.xyzw\n
; dcl_output o4\.xyzw\n
; dcl_output o5\.xyz\n
; dcl_output o6\.xy\n
; ^[\s\S]+^if_nz r0\.x\n)
; (?s)(?P<Match>.*
; dp3 r\d+\.x, v1\.xyzx, cb\d\[\d+\]\.xyzx\n
; dp3 r\d+\.y, v1\.xyzx, cb\d\[\d+\]\.xyzx\n
; dp3 r\d+\.z, v1\.xyzx, cb\d\[\d+\]\.xyzx\n)
; (?P<TillRet>.*)
; ret

; ; ;Invert Normals
; [ShaderRegexDiffuseVertexShader.Pattern.Replace]
; ${MatchDiffuse}\n
; ${Match}\n
; ${TillRet}\n
; ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(69,0), t120.xyzw\n
; ; if $active
; sample_indexable(texture2d)(float,float,float,float) r34.xyzw, v2.xyxx, t69.xyzw, s12\n
; if_nz r34.xyzw\n
;     ;mul o3.xyz, o3.xyz, l(-1,-1,-1)\n
; endif\n
; ret
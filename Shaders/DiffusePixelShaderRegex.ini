namespace = addon\TexFx

[ShaderRegexDiffuseTransparencyDiscard]
shader_model = ps_5_0
temps = ini tex69
run = CommandListResetResources

;Cute regex to match (almost) every character diffuse shader and outline
[ShaderRegexDiffuseTransparencyDiscard.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120
dcl_resource_texture2d (float,float,float,float) t69
;dcl_sampler s16, mode_default

[ShaderRegexDiffuseTransparencyDiscard.Pattern]
(?P<MatchDiffuse>
dcl_output o0\.xyzw\n
dcl_output o1\.xyzw\n
dcl_output o2\.xyzw\n
dcl_output o3\.x\n
dcl_output o4\.x\n
dcl_output o5\.x\n
^[\s\S]+^if_nz r0\.y\n)
(?s)(?P<TillModesty>.*?)
(?P<Modesty>discard\w+ \w+\.[xyzw]+\n)
(?P<TillRet>.*)
ret

;Inserts a discard statement if any pixel from our ps-t69 texture is not OPAQUE
[ShaderRegexDiffuseTransparencyDiscard.Pattern.Replace]
${MatchDiffuse}
${TillModesty}
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(69,0), t120.xyzw\n
; if $modesty
if_nz ${ini}.x\n
	${Modesty}\n
endif\n
${TillRet}
;Please, help me understand why this ONLY works without the s in s16
;sample_indexable(texture2d)(float,float,float,float) ${tex69}.xyzw, v2.xy, t69.xyzw, s16\n
sample_indexable(texture2d)(float,float,float,float) ${tex69}.xyzw, v2.xy, t69.xyzw, 16\n
discard_nz ${tex69}.xyzw\n
ret
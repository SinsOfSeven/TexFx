namespace = addon\TexFx

[ShaderRegexOutlineTransparency]
if $active == 1
	shader_model = ps_5_0
	temps = ini
	if ps-t69 == null
		pre ResourceRefo1 = o1
		run = CommandListSetResources
		pre x = rt_width
		pre y = rt_height
		post y69 = 0
		post w69 = 0
	endif
	if $use_default_shader == 1
			run = CustomShaderTransparencyPlus
	endif
	$active = 0
endif

; Regex Declare -------------------------------------
;
[ShaderRegexOutlineTransparency.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120
dcl_resource_texture2d (float,float,float,float) t69
dcl_sampler s12, mode_default
;dcl_sampler s13, mode_default


; Regex Match ---------------------------------------
;Match Outline
[ShaderRegexOutlineTransparency.Pattern]
(?P<MatchDiffuse>
dcl_output o0\.xyzw\n
dcl_output o1\.xyzw\n
dcl_output o2\.xyzw\n
dcl_output o3\.x\n
dcl_output o4\.x\n
dcl_output o5\.x\n
^[\s\S]+^if_nz r0\.x\n)
(?s)(?P<TillModesty>.*?)
(?P<Modesty>discard\w+ \w+\.[xyzw]+\n)
(?P<TillRet>.*)
ret

; ; Regex Replace -------------------------------------
; ;Inserts a discard statement if any pixel from our ps-t69 texture is not OPAQUE
[ShaderRegexOutlineTransparency.Pattern.Replace]
${MatchDiffuse}\n
${TillModesty}\n
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(69,0), t120.xyzw\n
; if $modesty
if_nz ${ini}.x\n
	${Modesty}\n
endif\n
${TillRet}\n
sample_indexable(texture2d)(float,float,float,float) r34.xyzw, v2.xy, t69.xyzw, s12\n
if_nz r34.xyzx\n
	discard_nz r34.wwww\n
endif\n
ret
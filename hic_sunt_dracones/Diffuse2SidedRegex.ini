namespace = TexFx

[ShaderRegexDiffuse2Sided]
shader_model = ps_4_0 ps_5_0
filter_index = 4243.07
temps = ini tex69 dim storage color o1 o2 texcoord
if ps-t69 === 0
    run = CommandListClearInstanceValues
    ps-t69 = null
endif
if ps-t70 === 0
    ps-t70 = null
endif


;Cute regex to match (almost) every character diffuse shader and outline
[ShaderRegexDiffuse2Sided.Pattern]
(?s)(?<MatchDiffuse>
dcl_input_ps_sgv constant v\d{1,2}\.x, is_front_face\n
dcl_output o0\.xyzw\n
dcl_output o1\.xyzw\n
dcl_output o2\.xyzw\n
dcl_output o3\.x\n
dcl_output o4\.x\n
dcl_output o5\.x\n
.*)
(?P<ModestyB>^\s+if_nz -?r\d+\.\w+\n
^\s+div -?r\d+\.\w+, v?\d+\.\w+, v?\d+\.\w+\n
^\s+mul -?r\d+\.\w+, -?r\d+\.\w+, -?cb\d\[\d+\]\.\w+\n
^\s+mul -?r\d+\.\w+, -?r\d+\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\)\n
^\s+ge -?r\d+\.\w+, -?r\d+\.\w+, -?r\d+\.\w+\n
^\s+frc -?r\d+\.\w+, \|-?r\d+\.\w+\|\n
^\s+movc -?r\d+\.\w+, -?r\d+\.\w+, -?r\d+\.\w+, -?r\d+\.\w+\n
^\s+mul -?r\d+\.\w+, -?r\d+\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\)\n
^\s+ftou -?r\d+\.\w+, -?r\d+\.\w+\n
^\s+dp\d+\ -?r\d+\.\w+, -?cb\d\[\d+\]\.\w+, icb\[r\d+\.\w+ \+.?\d+\]\.\w+\n
^\s+dp\d+\ -?r\d+\.\w+, -?cb\d\[\d+\]\.\w+, icb\[r\d+\.\w+ \+.?\d+\]\.\w+\n
^\s+dp\d+\ -?r\d+\.\w+, -?cb\d\[\d+\]\.\w+, icb\[r\d+\.\w+ \+.?\d+\]\.\w+\n
^\s+dp\d+\ -?r\d+\.\w+, -?cb\d\[\d+\]\.\w+, icb\[r\d+\.\w+ \+.?\d+\]\.\w+\n
^\s+dp\d+\ r\d+\.\w+, -?r\d+\.\w+, icb\[r\d+\.\w+ \+.?\d+\]\.\w+\n
^\s+mad -?r\d+\.\w+, -?cb\d\[\d+\]\.\w+, l\(-?\d*\.?\d+\), -?r\d+\.\w+\n
^\s+add -?r\d+\.\w+, -?r\d+\.\w+, l\(-?\d*\.?\d+\)\n
^\s+lt -?r\d+\.\w+, -?r\d+\.\w+, l\(-?\d*\.?\d+\)\n.*)
(?P<TillTexcord>sample_[b_]{0,2}indexable\(texture2d\)\(float,float,float,float\) r\d\d?\.[xyzw]+, (?P<TexcoordX>r\d\d?.(xyxx|yzyy)), t[01].[xyzw]+, s\d(, \w\d+(\.[xyzw]+)?)?$)
(?P<TillGlow>.*sqrt o1\.w, (?<Glow>r\d+\.[xyzw]+))
;(?<Tillo2CBPick>.*cb0\[(?<cb0o2pick>\d+)\].[xyzw]+, l\(0.00392156886\))
(?<Tillo2Pick>.*movc o2\.z, (?<o2Pick>r\d\.[xyzw]+, r\d\.[xyzw]+, r\d\.[xyzw]+))
(?P<Tillo1>.*mov o1\.xyz, (?<o1var>r\d+\.[xyzw]+))
(?P<Tillo2>.*mov o2\.(?<o2var>[xyw]+, r\d\.[xyzw]+))
(?P<TillBloom>.*mov o4.x, (?<Bloom>r\d+\.[xyzw]+))
(?P<TillRet>.*)
ret

[ShaderRegexDiffuse2Sided.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120
dcl_resource_texture2d (float,float,float,float) t69
dcl_sampler s15, mode_default

;Inserts a discard statement if any pixel from our ps-t69 texture is not OPAQUE
[ShaderRegexDiffuse2Sided.Pattern.Replace]
${MatchDiffuse}
${ModestyB}
${TillTexcord}\n
mov ${texcoord}.xyzw, ${TexcoordX}\n
${TillGlow}\n
sqrt ${storage}.xyxx, ${Glow}\n
;${Tillo2CBPick}\n
${Tillo2Pick}\n
movc ${storage}.z, ${o2Pick}\n
${Tillo1}\n
mov ${o1}.xyz, ${o1var}\n
${Tillo2}\n
mov ${o2}.${o2var}\n
mov ${o2}.z, ${storage}.z\n
${TillBloom}\n
mov ${storage}.w, ${Bloom}\n
${TillRet}
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(69,0), t120.xyzw\n
if_z ${ini}.y\n
\t	resinfo_indexable(texture2d)(float,float,float,float) ${dim}.xyyy, l(0), t69.xyzw\n
;\t  max ${dim}.xy, ${ini}.xx, ${dim}.xy\n
\t	if_nz ${dim}.xy\n
\t\t    ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(70,0), t120.xyzw\n
; \t\t    mul r0.xy%1, ${Texcoord}, l(0.99999,0.99999)\n
; \t\t    mul ${dim}.xyyy, ${dim}.xyyy, r0.xyyy\n
; \t\t    mov ${dim}.zw, l(0,0)\n
; \t\t    ftoi ${dim}.xyyy, ${dim}.xyyy\n
; \t\t    ld_indexable(texture2d)(float,float,float,float) ${tex69}.xyzw, ${dim}.xyzy, t69.xyzw\n
\t\t    sample_indexable(texture2d)(float,float,float,float) ${tex69}.xyzw, ${texcoord}.xyzw, t69.xyzw, s15\n
\t\t    mul ${tex69}.yz, ${tex69}.yz, ${ini}.yz\n
\t\t    add_sat ${tex69}.yz, ${tex69}.yx, ${storage}.wx\n
; Alpha Channel
;\t\t    max ${tex69}.xyzw, ${tex69}.xyzw, ${ini}.xxxx\n
\t\t    if_nz ${tex69}.w\n
\t\t\t      ld_indexable(texture1d)(float,float,float,float) ${color}.xyzw, l(71,0), t120.xyzw\n
\t\t\t      lt ${tex69}.w, ${tex69}.w, l(0.25)\n
\t\t\t      min ${tex69}.w, ${tex69}.w, ${color}.w\n
;\t\t\t      max ${tex69}.w, ${tex69}.w,  ${ini}.x\n
\t\t\t      if_nz ${tex69}.w\n
;
; o1
;
\t\t\t\t		mov r0.zw, l(0,0,-1.000000,0.666667)\n
\t\t\t\t		mov r1.zw, l(0,0,0,-0.333333)\n
\t\t\t\t		mov r2.xyzw, ${o1}.xyzx\n
\t\t\t\t		mov r0.xy, r2.zyzz\n
\t\t\t\t		mov r1.xy, r0.yxyy\n
\t\t\t\t		lt r2.y, r0.y, r2.z\n
\t\t\t\t		movc r0.xyzw, r2.yyyy, r0.xyzw, r1.xyzw\n
\t\t\t\t		lt r1.x, r2.x, r0.x\n
\t\t\t\t		mov r3.xyz, r0.xywx\n
\t\t\t\t		mov r3.w, r2.x\n
\t\t\t\t		mov r0.xyw, r3.wywx\n
\t\t\t\t		movc r0.xyzw, r1.xxxx, r3.xyzw, r0.xyzw\n
\t\t\t\t		min r1.x, r0.y, r0.w\n
\t\t\t\t		add r1.x, r0.x, -r1.x\n
\t\t\t\t		mad r1.y, r1.x, l(6.000000), l(0.000000)\n
\t\t\t\t		add r0.y, -r0.y, r0.w\n
\t\t\t\t		div r0.y, r0.y, r1.y\n
\t\t\t\t		add r0.y, r0.y, r0.z\n
; HUE
\t\t\t\t		add r0.z, ${color}.x, |r0.y|\n
\t\t\t\t		ge r0.w, r0.z, -r0.z\n
\t\t\t\t		frc r0.z, |r0.z|\n
\t\t\t\t		movc r0.z, r0.w, r0.z, -r0.z\n
\t\t\t\t		ge r0.w, |r0.y|, l(0.266000)\n
\t\t\t\t        mov r0.w, l(1.0)\n
\t\t\t\t		movc r0.y, r0.w, r0.z, |r0.y|\n
\t\t\t\t		add r0.yzw, r0.yyyy, l(0.000000, 1.000000, 0.666667, 0.333333)\n
\t\t\t\t		frc r0.yzw, r0.yyzw\n
\t\t\t\t		mad r0.yzw, r0.yyzw, l(0.000000, 6.000000, 6.000000, 6.000000), l(0.000000, -3.000000, -3.000000, -3.000000)\n
\t\t\t\t		add_sat r0.yzw, |r0.yyzw|, l(0.000000, -1.000000, -1.000000, -1.000000)\n
\t\t\t\t		add r0.yzw, r0.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)\n
\t\t\t\t		add r1.y, r0.x, l(0.000000)\n
; VAL
\t\t\t\t		add r0.x, r0.x, ${color}.z\n
\t\t\t\t		div r1.x, r1.x, r1.y\n
; SAT
\t\t\t\t		add r1.x, r1.x, ${color}.y\n
\t\t\t\t		mad r0.yzw, r1.xxxx, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)\n
\t\t\t\t		mul o1.xyz, r0.yzwy, r0.xxxx\n
;
; o2
;
\t\t\t\t		mov r0.zw, l(0,0,-1.000000,0.666667)\n
\t\t\t\t		mov r1.zw, l(0,0,0,-0.333333)\n
\t\t\t\t		mov r2.xyzw, ${o2}.xywz\n
\t\t\t\t		mov r0.xy, r2.zyzz\n
\t\t\t\t		mov r1.xy, r0.yxyy\n
\t\t\t\t		lt r2.y, r0.y, r2.z\n
\t\t\t\t		movc r0.xyzw, r2.yyyy, r0.xyzw, r1.xyzw\n
\t\t\t\t		lt r1.x, r2.x, r0.x\n
\t\t\t\t		mov r3.xyz, r0.xywx\n
\t\t\t\t		mov r3.w, r2.x\n
\t\t\t\t		mov r0.xyw, r3.wywx\n
\t\t\t\t		movc r0.xyzw, r1.xxxx, r3.xyzw, r0.xyzw\n
\t\t\t\t		min r1.x, r0.y, r0.w\n
\t\t\t\t		add r1.x, r0.x, -r1.x\n
\t\t\t\t		mad r1.y, r1.x, l(6.000000), l(0.000000)\n
\t\t\t\t		add r0.y, -r0.y, r0.w\n
\t\t\t\t		div r0.y, r0.y, r1.y\n
\t\t\t\t		add r0.y, r0.y, r0.z\n
; HUE
\t\t\t\t		add r0.z, ${color}.x, |r0.y|\n
\t\t\t\t		ge r0.w, r0.z, -r0.z\n
\t\t\t\t		frc r0.z, |r0.z|\n
\t\t\t\t		movc r0.z, r0.w, r0.z, -r0.z\n
\t\t\t\t		ge r0.w, |r0.y|, l(0.266000)\n
\t\t\t\t		movc r0.y, r0.w, r0.z, |r0.y|\n
\t\t\t\t		add r0.yzw, r0.yyyy, l(0.000000, 1.000000, 0.666667, 0.333333)\n
\t\t\t\t		frc r0.yzw, r0.yyzw\n
\t\t\t\t		mad r0.yzw, r0.yyzw, l(0.000000, 6.000000, 6.000000, 6.000000), l(0.000000, -3.000000, -3.000000, -3.000000)\n
\t\t\t\t		add_sat r0.yzw, |r0.yyzw|, l(0.000000, -1.000000, -1.000000, -1.000000)\n
\t\t\t\t		add r0.yzw, r0.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)\n
\t\t\t\t		add r1.y, r0.x, l(-1)\n
; VAL
\t\t\t\t		add r0.x, r0.x, ${color}.z\n
\t\t\t\t		div r1.x, r1.x, r1.y\n
; SAT
\t\t\t\t		add r1.x, r1.x, ${color}.y\n
\t\t\t\t		mad r0.yzw, r1.xxxx, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)\n
\t\t\t\t		mul o2.xyz, r0.yzwy, r0.xxxx\n

\t\t\t      endif\n
\t\t    endif\n
; Green Channel
\t\t    if_nz ${tex69}.y\n
\t\t\t		mov o1.w, ${tex69}.y\n
\t\t	endif\n
; Blue Channel
\t\t	if_nz ${tex69}.z\n
\t\t\t		mov o4.x, ${tex69}.z\n
\t\t	endif\n
; Red Channel
\t\t	discard_nz ${tex69}.x\n
\t  endif\n
endif\n
; debugging, remove diffuse
; discard_z l(0)\n
ret